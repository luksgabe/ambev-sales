// <auto-generated />
using System;
using Ambev.DeveloperEvaluation.ORM;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Ambev.DeveloperEvaluation.ORM.Migrations
{
    [DbContext(typeof(DefaultContext))]
    partial class DefaultContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Application.Configuration.Events.StoredEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AggregateId")
                        .HasColumnType("uuid");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MessageType")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Action");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationDate");

                    b.HasKey("Id");

                    b.ToTable("StoredEvent");
                });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.Branch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Branches", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222201"),
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7631),
                            Location = "Rua das Flores, 123, Centro",
                            Name = "Loja Centro"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222202"),
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7635),
                            Location = "Avenida Comercial, 456, Shopping Central",
                            Name = "Shopping Outlet"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222203"),
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7636),
                            Location = "Rua Inovação, 789, Distrito Tecnológico",
                            Name = "Tech Hub"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222204"),
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7638),
                            Location = "Avenida das Palmeiras, 321, Bairro Residencial",
                            Name = "Loja Suburbana"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222205"),
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7639),
                            Location = "Terminal 1, Aeroporto Internacional",
                            Name = "Quiosque Aeroporto"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222206"),
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7641),
                            Location = "Praça Acadêmica, Avenida Universidade",
                            Name = "Loja Universitária"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222207"),
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7644),
                            Location = "Parque Corporativo, 500, Área de Negócios",
                            Name = "Loja Empresarial"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222208"),
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7646),
                            Location = "Avenida Beira-Mar, 100, Região Costeira",
                            Name = "Outlet Praia"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222209"),
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7648),
                            Location = "Rua das Montanhas, 200, Região Serrana",
                            Name = "Loja Serra"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222210"),
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7650),
                            Location = "Rua das Fábricas, 600, Polo Industrial",
                            Name = "Loja Industrial"
                        });
                });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Color")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111101"),
                            Color = "Silver",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7442),
                            Description = "High-performance laptop",
                            Name = "Laptop",
                            Size = "15-inch"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111102"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7446),
                            Description = "Ergonomic wireless mouse",
                            Name = "Wireless Mouse",
                            Size = "Medium"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111103"),
                            Color = "White",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7448),
                            Description = "RGB backlit keyboard",
                            Name = "Mechanical Keyboard",
                            Size = "Full-size"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111104"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7450),
                            Description = "144Hz refresh rate monitor",
                            Name = "Gaming Monitor",
                            Size = "27-inch"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111105"),
                            Color = "Grey",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7452),
                            Description = "Multiport adapter",
                            Name = "USB-C Hub",
                            Size = "Compact"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111106"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7455),
                            Description = "1TB storage drive",
                            Name = "External Hard Drive",
                            Size = "Portable"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111107"),
                            Color = "Blue",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7457),
                            Description = "Latest model smartphone",
                            Name = "Smartphone",
                            Size = "6-inch"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111108"),
                            Color = "Red",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7458),
                            Description = "Portable wireless speaker",
                            Name = "Bluetooth Speaker",
                            Size = "Small"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111109"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7460),
                            Description = "Wireless noise-canceling headphones",
                            Name = "Noise Cancelling Headphones",
                            Size = "Over-ear"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-11111111110a"),
                            Color = "Silver",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7462),
                            Description = "Water-resistant smartwatch",
                            Name = "Smartwatch",
                            Size = "40mm"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-11111111110b"),
                            Color = "Gold",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7464),
                            Description = "High-resolution tablet",
                            Name = "Tablet",
                            Size = "10-inch"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-11111111110c"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7465),
                            Description = "Professional drawing tablet",
                            Name = "Graphic Tablet",
                            Size = "Large"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-11111111110d"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7466),
                            Description = "1080p HD webcam",
                            Name = "Webcam",
                            Size = "Compact"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-11111111110e"),
                            Color = "Silver",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7468),
                            Description = "Professional podcast microphone",
                            Name = "Microphone",
                            Size = "Medium"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-11111111110f"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7472),
                            Description = "Virtual reality headset",
                            Name = "VR Headset",
                            Size = "Adjustable"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111110"),
                            Color = "White",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7474),
                            Description = "4K camera drone",
                            Name = "Drone",
                            Size = "Portable"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7475),
                            Description = "Fast external SSD",
                            Name = "Portable SSD",
                            Size = "500GB"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111112"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7477),
                            Description = "High-speed HDMI cable",
                            Name = "HDMI Cable",
                            Size = "6ft"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111113"),
                            Color = "White",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7479),
                            Description = "Fast charging pad",
                            Name = "Wireless Charger",
                            Size = "Small"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111114"),
                            Color = "Red",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7480),
                            Description = "Ergonomic gaming chair",
                            Name = "Gaming Chair",
                            Size = "Large"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111115"),
                            Color = "Multi-color",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7482),
                            Description = "WiFi-enabled LED bulb",
                            Name = "Smart Bulb",
                            Size = "Standard"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111116"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7483),
                            Description = "10000mAh fast-charging power bank",
                            Name = "Portable Power Bank",
                            Size = "Compact"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111117"),
                            Color = "Blue",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7485),
                            Description = "Activity tracking smartwatch",
                            Name = "Fitness Tracker",
                            Size = "Medium"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111118"),
                            Color = "Silver",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7486),
                            Description = "Automatic drip coffee maker",
                            Name = "Coffee Maker",
                            Size = "Medium"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111119"),
                            Color = "White",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7487),
                            Description = "HEPA filter air purifier",
                            Name = "Air Purifier",
                            Size = "Large"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-11111111111a"),
                            Color = "White",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7489),
                            Description = "Rechargeable electric toothbrush",
                            Name = "Electric Toothbrush",
                            Size = "Small"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-11111111111b"),
                            Color = "Brown",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7490),
                            Description = "Adjustable height standing desk",
                            Name = "Standing Desk",
                            Size = "Large"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-11111111111c"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7492),
                            Description = "Smart robotic vacuum cleaner",
                            Name = "Robot Vacuum",
                            Size = "Compact"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-11111111111d"),
                            Color = "White",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7493),
                            Description = "Programmable smart thermostat",
                            Name = "Smart Thermostat",
                            Size = "Standard"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-11111111111e"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7495),
                            Description = "Surround sound home theater system",
                            Name = "Home Theater System",
                            Size = "Large"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-11111111111f"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7496),
                            Description = "4K action camera",
                            Name = "Action Camera",
                            Size = "Compact"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111120"),
                            Color = "Silver",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7498),
                            Description = "Bluetooth enabled smart lock",
                            Name = "Smart Lock",
                            Size = "Standard"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111121"),
                            Color = "White",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7499),
                            Description = "Mini portable projector",
                            Name = "Portable Projector",
                            Size = "Small"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111122"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7501),
                            Description = "E-ink display e-reader",
                            Name = "E-Reader",
                            Size = "Pocket"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111123"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7503),
                            Description = "Augmented reality smart glasses",
                            Name = "Smart Glasses",
                            Size = "Standard"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111124"),
                            Color = "White",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7504),
                            Description = "True wireless earbuds",
                            Name = "Wireless Earbuds",
                            Size = "Small"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111125"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7506),
                            Description = "Compact portable charger",
                            Name = "Portable Charger",
                            Size = "Small"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111126"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7507),
                            Description = "Next-gen gaming console",
                            Name = "Gaming Console",
                            Size = "Standard"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111127"),
                            Color = "Stainless Steel",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7509),
                            Description = "WiFi-connected smart refrigerator",
                            Name = "Smart Refrigerator",
                            Size = "Large"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111128"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7510),
                            Description = "High-resolution digital camera",
                            Name = "Digital Camera",
                            Size = "Compact"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111129"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7511),
                            Description = "Voice-controlled smart speaker",
                            Name = "Smart Speaker",
                            Size = "Standard"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-11111111112a"),
                            Color = "Green",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7513),
                            Description = "Eco-friendly electric scooter",
                            Name = "Electric Scooter",
                            Size = "Medium"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-11111111112b"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7514),
                            Description = "Wireless VR controller",
                            Name = "VR Controller",
                            Size = "Standard"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-11111111112c"),
                            Color = "Stainless Steel",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7516),
                            Description = "Convection smart oven",
                            Name = "Smart Oven",
                            Size = "Large"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-11111111112d"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7517),
                            Description = "Eco-friendly electric bike",
                            Name = "Electric Bike",
                            Size = "Standard"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-11111111112e"),
                            Color = "White",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7519),
                            Description = "White noise machine",
                            Name = "Noise Machine",
                            Size = "Small"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-11111111112f"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7520),
                            Description = "Digital smart scale",
                            Name = "Smart Scale",
                            Size = "Standard"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111130"),
                            Color = "Yellow",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7522),
                            Description = "Tile-like Bluetooth tracker",
                            Name = "Bluetooth Tracker",
                            Size = "Small"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111131"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7523),
                            Description = "High-speed wireless router",
                            Name = "Wireless Router",
                            Size = "Standard"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111132"),
                            Color = "Space Gray",
                            CreatedAt = new DateTime(2025, 3, 4, 1, 10, 59, 927, DateTimeKind.Utc).AddTicks(7524),
                            Description = "Advanced smartwatch",
                            Name = "Smartwatch Pro",
                            Size = "42mm"
                        });
                });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.Sale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<Guid>("BranchId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("TotalSaleAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Sales", (string)null);
                });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.SaleItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Discount")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<Guid>("SaleId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SaleId");

                    b.ToTable("SaleItems", (string)null);
                });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.Sale", b =>
                {
                    b.HasOne("Ambev.DeveloperEvaluation.Domain.Entities.Branch", "Branch")
                        .WithMany("Sales")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ambev.DeveloperEvaluation.Domain.Entities.User", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.SaleItem", b =>
                {
                    b.HasOne("Ambev.DeveloperEvaluation.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ambev.DeveloperEvaluation.Domain.Entities.Sale", "Sale")
                        .WithMany("SaleItens")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.Branch", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.Sale", b =>
                {
                    b.Navigation("SaleItens");
                });
#pragma warning restore 612, 618
        }
    }
}
